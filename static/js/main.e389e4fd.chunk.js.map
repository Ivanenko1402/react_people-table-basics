{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","api.ts","components/Loader/Loader.tsx","components/ParentLink/ParentLink.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["Navbar","className","to","isActive","classNames","App","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","ParentLink","parent","slug","name","sex","PersonLink","person","personSlug","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","useState","peopleList","setPeopleList","isShowError","setIsShowError","isLoading","setIsLoading","useParams","findParent","find","getParent","peopleFromServer","useEffect","loadingPeople","length","Boolean","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.e389e4fd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) => classNames('navbar-item', {\n          'navbar-item has-background-grey-lighter': isActive,\n        })}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"people\"\n        className={({ isActive }) => classNames('navbar-item', {\n          'navbar-item has-background-grey-lighter': isActive,\n        })}\n      >\n        People\n      </NavLink>\n    </div>\n  );\n};\n","import {\n  Outlet,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <Navbar />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  parent: Person,\n};\n\nexport const ParentLink: React.FC<Props> = ({ parent }) => {\n  const { slug, name, sex } = parent;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { UpdatePerson } from '../../types/UpdatePerson';\nimport { ParentLink } from '../ParentLink/ParentLink';\n\ntype Props = {\n  person: UpdatePerson,\n  personSlug: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  personSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    name,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? <ParentLink parent={mother} /> : motherName}\n      </td>\n      <td>\n        {father ? <ParentLink parent={father} /> : fatherName}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { UpdatePerson } from '../../types/UpdatePerson';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: UpdatePerson[],\n  personSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  personSlug,\n}) => {\n  return (\n    <>\n      {people.map(person => (\n        <PersonLink\n          key={`${person.slug}`}\n          person={person}\n          personSlug={personSlug}\n        />\n      ))}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isShowError, setIsShowError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const { personSlug = '' } = useParams();\n\n  function findParent(name: string) {\n    return peopleList.find(person => person.name === name);\n  }\n\n  function getParent() {\n    return peopleList.map(person => ({\n      ...person,\n      fatherName: person.fatherName ? person.fatherName : '-',\n      motherName: person.motherName ? person.motherName : '-',\n      father: person.fatherName ? findParent(person.fatherName) : null,\n      mother: person.motherName ? findParent(person.motherName) : null,\n    }));\n  }\n\n  async function loadingPeople() {\n    setIsLoading(true);\n    const peopleFromServer = await getPeople();\n\n    try {\n      setPeopleList(peopleFromServer);\n      setIsShowError(false);\n    } catch {\n      setIsShowError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadingPeople();\n    getParent();\n  }, []);\n\n  const people = getParent();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isShowError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !peopleList.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {Boolean(people.length) && (\n            <table\n              data-cy=\"peopleTable\"\n              className={'table is-striped is-hoverable'\n                + 'is-narrow is-fullwidth'}\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <PeopleTable\n                  people={people}\n                  personSlug={personSlug}\n                />\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}